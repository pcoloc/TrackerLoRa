import { coerceBooleanProperty } from '@angular/cdk/coercion';
import { Component, HostBinding, Input, ViewEncapsulation, } from '@angular/core';
import { Observable, Subject } from 'rxjs';
import * as i0 from "@angular/core";
// eslint-disable-next-line @angular-eslint/component-class-suffix
export class MdbTableDirective {
    constructor(el, renderer) {
        this.el = el;
        this.renderer = renderer;
        this._striped = false;
        this._bordered = false;
        this._borderless = false;
        this._hover = false;
        this._small = false;
        this._responsive = false;
        this._stickyHeader = false;
        this.stickyHeaderBgColor = '#f2f2f2';
        this.stickyHeaderTextColor = '#000000';
        this._stickyFooter = false;
        this.stickyFooterBgColor = '#f2f2f2';
        this.stickyFooterTextColor = '#000000';
        this._dataSource = [];
        this._dataSourceChanged = new Subject();
    }
    get striped() {
        return this._striped;
    }
    set striped(value) {
        this._striped = coerceBooleanProperty(value);
    }
    get bordered() {
        return this._bordered;
    }
    set bordered(value) {
        this._bordered = coerceBooleanProperty(value);
    }
    get borderless() {
        return this._borderless;
    }
    set borderless(value) {
        this._borderless = coerceBooleanProperty(value);
    }
    get hover() {
        return this._hover;
    }
    set hover(value) {
        this._hover = coerceBooleanProperty(value);
    }
    get small() {
        return this._small;
    }
    set small(value) {
        this._small = coerceBooleanProperty(value);
    }
    get responsive() {
        return this._responsive;
    }
    set responsive(value) {
        this._responsive = coerceBooleanProperty(value);
    }
    get stickyHeader() {
        return this._stickyHeader;
    }
    set stickyHeader(value) {
        this._stickyHeader = coerceBooleanProperty(value);
    }
    get stickyFooter() {
        return this._stickyFooter;
    }
    set stickyFooter(value) {
        this._stickyFooter = coerceBooleanProperty(value);
    }
    addRow(newRow) {
        this.getDataSource().push(newRow);
    }
    addRowAfter(index, row) {
        this.getDataSource().splice(index, 0, row);
    }
    removeRow(index) {
        this.getDataSource().splice(index, 1);
    }
    rowRemoved() {
        return new Observable((observer) => {
            observer.next(true);
        });
    }
    removeLastRow() {
        this.getDataSource().pop();
    }
    getDataSource() {
        return this._dataSource;
    }
    setDataSource(data) {
        this._dataSource = data;
        this._dataSourceChanged.next(this.getDataSource());
    }
    dataSourceChange() {
        return this._dataSourceChanged;
    }
    filterLocalDataBy(searchKey) {
        return this.getDataSource().filter((obj) => {
            return Object.keys(obj).some((key) => {
                if (obj[key]) {
                    // Fix(tableSearch): table search will now able to filter through nested data
                    return JSON.stringify(obj).toLowerCase().includes(searchKey);
                }
            });
        });
    }
    filterLocalDataByFields(searchKey, keys) {
        return this.getDataSource().filter((obj) => {
            return Object.keys(obj).some((key) => {
                if (obj[key]) {
                    if (keys.includes(key)) {
                        if (obj[key].toLowerCase().includes(searchKey)) {
                            return obj[key];
                        }
                    }
                }
            });
        });
    }
    filterLocalDataByMultipleFields(searchKey, keys) {
        const items = searchKey.split(' ').map((x) => x.toLowerCase());
        return this.getDataSource().filter((x) => {
            for (const item of items) {
                let flag = false;
                if (keys !== undefined) {
                    for (const prop in x) {
                        if (x[prop] && x.hasOwnProperty(prop)) {
                            if (keys.includes(prop)) {
                                if (x[prop].toLowerCase().indexOf(item) !== -1) {
                                    flag = true;
                                    break;
                                }
                            }
                        }
                    }
                }
                if (keys === undefined) {
                    for (const prop in x) {
                        if (x.hasOwnProperty(prop) && x[prop].toLowerCase().indexOf(item) !== -1) {
                            flag = true;
                            break;
                        }
                    }
                }
                if (!flag) {
                    return false;
                }
            }
            return true;
        });
    }
    searchLocalDataBy(searchKey) {
        if (!searchKey) {
            return this.getDataSource();
        }
        if (searchKey) {
            return this.filterLocalDataBy(searchKey.toLowerCase());
        }
    }
    searchLocalDataByFields(searchKey, keys) {
        if (!searchKey) {
            return this.getDataSource();
        }
        if (searchKey && keys.length > 0) {
            return this.filterLocalDataByFields(searchKey.toLowerCase(), keys);
        }
        if (!keys || keys.length === 0) {
            return this.filterLocalDataBy(searchKey.toLowerCase());
        }
    }
    searchLocalDataByMultipleFields(searchKey, keys) {
        if (!searchKey) {
            return this.getDataSource();
        }
        if (searchKey && keys !== undefined) {
            return this.filterLocalDataByMultipleFields(searchKey.toLowerCase(), keys);
        }
    }
    searchDataObservable(searchKey) {
        return new Observable((observer) => {
            observer.next(this.searchLocalDataBy(searchKey));
        });
    }
    ngOnInit() {
        this.renderer.addClass(this.el.nativeElement, 'table');
    }
    ngAfterViewInit() {
        // Fix(stickyHeader): resolved problem with not working stickyHeader="true" on Chrome
        if (this.stickyHeader) {
            this.makeSticky('thead', 'sticky-top', this.stickyHeaderBgColor, this.stickyHeaderTextColor);
        }
        if (this.stickyFooter) {
            this.makeSticky('tfoot', 'sticky-bottom', this.stickyFooterBgColor, this.stickyFooterTextColor);
        }
    }
    makeSticky(query, elementClass, bgColor, color) {
        const tableHead = this.el.nativeElement.querySelector(query);
        Array.from(tableHead.firstElementChild.children).forEach((child) => {
            this.renderer.addClass(child, elementClass);
            if (bgColor) {
                this.renderer.setStyle(child, 'background-color', bgColor);
            }
            if (color) {
                this.renderer.setStyle(child, 'color', color);
            }
        });
    }
}
MdbTableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.6", ngImport: i0, type: MdbTableDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });
MdbTableDirective.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.6", type: MdbTableDirective, selector: "[mdbTable]", inputs: { striped: "striped", bordered: "bordered", borderless: "borderless", hover: "hover", small: "small", responsive: "responsive", stickyHeader: "stickyHeader", stickyHeaderBgColor: "stickyHeaderBgColor", stickyHeaderTextColor: "stickyHeaderTextColor", stickyFooter: "stickyFooter", stickyFooterBgColor: "stickyFooterBgColor", stickyFooterTextColor: "stickyFooterTextColor" }, host: { properties: { "class.table-striped": "this.striped", "class.table-bordered": "this.bordered", "class.table-borderless": "this.borderless", "class.table-hover": "this.hover", "class.table-sm": "this.small", "class.table-responsive": "this.responsive" } }, exportAs: ["mdbTable"], ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: ["table th{font-size:.9rem;font-weight:400}table td{font-size:.9rem;font-weight:300}table thead th svg.ascending,table thead th svg.descending,table thead td svg.ascending,table thead td svg.descending{display:none;max-height:.9rem;max-width:.9rem}table thead th[aria-sort=ascending] svg.ascending,table thead td[aria-sort=ascending] svg.ascending{display:unset}table thead th[aria-sort=descending] svg.descending,table thead td[aria-sort=descending] svg.descending{display:unset}table thead th:not([aria-sort]):hover svg.descending,table thead th[aria-sort=constant]:hover svg.descending,table thead td:not([aria-sort]):hover svg.descending,table thead td[aria-sort=constant]:hover svg.descending{display:unset;opacity:.5}table tfoot .sticky-bottom{position:sticky;bottom:0}table.table{margin-bottom:0}table.table thead th{border-top:none;border-bottom-width:1px}table.table th,table.table td{padding:1.1rem 16px 1rem}table.table .label-table{margin:0;padding:0;line-height:.94rem;height:.94rem}table.table.btn-table td{vertical-align:middle}table.table-hover tbody tr:hover{transition:.5s;background-color:#00000013}table .th-lg{min-width:9rem}table .th-sm{min-width:6rem}table.table-sm th,table.table-sm td{padding-top:.6rem;padding-bottom:.6rem}.table-scroll-vertical{max-height:300px;overflow-y:auto}.table-fixed{table-layout:fixed}.table-responsive>.table-bordered,.table-responsive-sm>.table-bordered,.table-responsive-md>.table-bordered,.table-responsive-lg>.table-bordered,.table-responsive-xl>.table-bordered{border-top:1px solid #dee2e6}\n"], encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.6", ngImport: i0, type: MdbTableDirective, decorators: [{
            type: Component,
            args: [{ selector: '[mdbTable]', exportAs: 'mdbTable', template: '<ng-content></ng-content>', encapsulation: ViewEncapsulation.None, styles: ["table th{font-size:.9rem;font-weight:400}table td{font-size:.9rem;font-weight:300}table thead th svg.ascending,table thead th svg.descending,table thead td svg.ascending,table thead td svg.descending{display:none;max-height:.9rem;max-width:.9rem}table thead th[aria-sort=ascending] svg.ascending,table thead td[aria-sort=ascending] svg.ascending{display:unset}table thead th[aria-sort=descending] svg.descending,table thead td[aria-sort=descending] svg.descending{display:unset}table thead th:not([aria-sort]):hover svg.descending,table thead th[aria-sort=constant]:hover svg.descending,table thead td:not([aria-sort]):hover svg.descending,table thead td[aria-sort=constant]:hover svg.descending{display:unset;opacity:.5}table tfoot .sticky-bottom{position:sticky;bottom:0}table.table{margin-bottom:0}table.table thead th{border-top:none;border-bottom-width:1px}table.table th,table.table td{padding:1.1rem 16px 1rem}table.table .label-table{margin:0;padding:0;line-height:.94rem;height:.94rem}table.table.btn-table td{vertical-align:middle}table.table-hover tbody tr:hover{transition:.5s;background-color:#00000013}table .th-lg{min-width:9rem}table .th-sm{min-width:6rem}table.table-sm th,table.table-sm td{padding-top:.6rem;padding-bottom:.6rem}.table-scroll-vertical{max-height:300px;overflow-y:auto}.table-fixed{table-layout:fixed}.table-responsive>.table-bordered,.table-responsive-sm>.table-bordered,.table-responsive-md>.table-bordered,.table-responsive-lg>.table-bordered,.table-responsive-xl>.table-bordered{border-top:1px solid #dee2e6}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { striped: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['class.table-striped']
            }], bordered: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['class.table-bordered']
            }], borderless: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['class.table-borderless']
            }], hover: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['class.table-hover']
            }], small: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['class.table-sm']
            }], responsive: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['class.table-responsive']
            }], stickyHeader: [{
                type: Input
            }], stickyHeaderBgColor: [{
                type: Input
            }], stickyHeaderTextColor: [{
                type: Input
            }], stickyFooter: [{
                type: Input
            }], stickyFooterBgColor: [{
                type: Input
            }], stickyFooterTextColor: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,