import { Directive, Inject, Self, ElementRef, PLATFORM_ID, NgZone, } from '@angular/core';
import { BaseDirective } from './base.directive';
import { AnimationLoader } from './animation-loader';
import * as i0 from "@angular/core";
import * as i1 from "./animation-loader";
export class LottieDirective extends BaseDirective {
    constructor(ngZone, platformId, host, animationLoader) {
        super(ngZone, platformId, animationLoader);
        this.host = host;
    }
    ngOnChanges(changes) {
        super.loadAnimation(changes, this.host.nativeElement);
    }
}
/** @nocollapse */ /** @nocollapse */ LottieDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.2", ngImport: i0, type: LottieDirective, deps: [{ token: i0.NgZone }, { token: PLATFORM_ID }, { token: i0.ElementRef, self: true }, { token: i1.AnimationLoader }], target: i0.ɵɵFactoryTarget.Directive });
/** @nocollapse */ /** @nocollapse */ LottieDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.2.2", type: LottieDirective, selector: "[lottie]", usesInheritance: true, usesOnChanges: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.2", ngImport: i0, type: LottieDirective, decorators: [{
            type: Directive,
            args: [{ selector: '[lottie]' }]
        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [PLATFORM_ID]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Self
                }] }, { type: i1.AnimationLoader }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG90dGllLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2xpYnMvbmd4LWxvdHRpZS9zcmMvbGliL2xvdHRpZS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxNQUFNLEVBQ04sSUFBSSxFQUNKLFVBQVUsRUFDVixXQUFXLEVBR1gsTUFBTSxHQUNQLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7OztBQUdyRCxNQUFNLE9BQU8sZUFBZ0IsU0FBUSxhQUFhO0lBQ2hELFlBQ0UsTUFBYyxFQUNPLFVBQWtCLEVBQ3ZCLElBQTZCLEVBQzdDLGVBQWdDO1FBRWhDLEtBQUssQ0FBQyxNQUFNLEVBQUUsVUFBVSxFQUFFLGVBQWUsQ0FBQyxDQUFDO1FBSDNCLFNBQUksR0FBSixJQUFJLENBQXlCO0lBSS9DLENBQUM7SUFFRCxXQUFXLENBQUMsT0FBc0I7UUFDaEMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUN4RCxDQUFDOztrSkFaVSxlQUFlLHdDQUdoQixXQUFXO3NJQUhWLGVBQWU7MkZBQWYsZUFBZTtrQkFEM0IsU0FBUzttQkFBQyxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUU7OzBCQUk5QixNQUFNOzJCQUFDLFdBQVc7OzBCQUNsQixJQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgRGlyZWN0aXZlLFxuICBJbmplY3QsXG4gIFNlbGYsXG4gIEVsZW1lbnRSZWYsXG4gIFBMQVRGT1JNX0lELFxuICBPbkNoYW5nZXMsXG4gIFNpbXBsZUNoYW5nZXMsXG4gIE5nWm9uZSxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IEJhc2VEaXJlY3RpdmUgfSBmcm9tICcuL2Jhc2UuZGlyZWN0aXZlJztcbmltcG9ydCB7IEFuaW1hdGlvbkxvYWRlciB9IGZyb20gJy4vYW5pbWF0aW9uLWxvYWRlcic7XG5cbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ1tsb3R0aWVdJyB9KVxuZXhwb3J0IGNsYXNzIExvdHRpZURpcmVjdGl2ZSBleHRlbmRzIEJhc2VEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICBjb25zdHJ1Y3RvcihcbiAgICBuZ1pvbmU6IE5nWm9uZSxcbiAgICBASW5qZWN0KFBMQVRGT1JNX0lEKSBwbGF0Zm9ybUlkOiBzdHJpbmcsXG4gICAgQFNlbGYoKSBwcml2YXRlIGhvc3Q6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+LFxuICAgIGFuaW1hdGlvbkxvYWRlcjogQW5pbWF0aW9uTG9hZGVyLFxuICApIHtcbiAgICBzdXBlcihuZ1pvbmUsIHBsYXRmb3JtSWQsIGFuaW1hdGlvbkxvYWRlcik7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZCB7XG4gICAgc3VwZXIubG9hZEFuaW1hdGlvbihjaGFuZ2VzLCB0aGlzLmhvc3QubmF0aXZlRWxlbWVudCk7XG4gIH1cbn1cbiJdfQ==